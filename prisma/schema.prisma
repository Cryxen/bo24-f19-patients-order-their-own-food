// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email String @id @unique
  name String 
  role String
  password String
}

model Meal {
  mealName String @id @unique
  description String
  category String
  dietaryInfo String?
  imageUrl String?
  meaplPlan MealToMealPlan[]
}

model Room {
  roomNumber Int @id @unique
  order Order @relation(fields: [orderId], references: [id])
  orderId Int @unique
  restriction Restriction? @relation(fields: [dietaryRestriction], references: [dietaryRestriction])
  dietaryRestriction String? @unique
}

model MealPlan {
  id Int @id @default(autoincrement())
  meals MealToMealPlan[] 
  orders Order[]
  date String
  imageUrl String?
  description String
}

model MealToMealPlan {
  mealPlan MealPlan @relation(fields: [mealPlanId], references: [id])
  mealPlanId Int
  meal Meal @relation(fields: [mealIdName], references: [mealName])
  mealIdName String
  @@id([mealPlanId, mealIdName])
}

model Order {
  id Int @id @default(autoincrement())
  meal String
  room Room[]
  mealPlan MealPlan @relation(fields: [mealPlanId], references: [id])
  mealPlanId Int @unique
}

model PastOrder {
  id Int @id @default(autoincrement())
  roomNumber Int
  meal String
  date String
}

model Restriction {
  dietaryRestriction String @id
  room Room[]
}